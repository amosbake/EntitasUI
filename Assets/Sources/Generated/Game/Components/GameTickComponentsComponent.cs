//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity tickComponentsEntity { get { return GetGroup(GameMatcher.TickComponents).GetSingleEntity(); } }
    public TickComponents tickComponents { get { return tickComponentsEntity.tickComponents; } }
    public bool hasTickComponents { get { return tickComponentsEntity != null; } }

    public GameEntity SetTickComponents(long newCurrentTic) {
        if (hasTickComponents) {
            throw new Entitas.EntitasException("Could not set TickComponents!\n" + this + " already has an entity with TickComponents!",
                "You should check if the context already has a tickComponentsEntity before setting it or use context.ReplaceTickComponents().");
        }
        var entity = CreateEntity();
        entity.AddTickComponents(newCurrentTic);
        return entity;
    }

    public void ReplaceTickComponents(long newCurrentTic) {
        var entity = tickComponentsEntity;
        if (entity == null) {
            entity = SetTickComponents(newCurrentTic);
        } else {
            entity.ReplaceTickComponents(newCurrentTic);
        }
    }

    public void RemoveTickComponents() {
        tickComponentsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TickComponents tickComponents { get { return (TickComponents)GetComponent(GameComponentsLookup.TickComponents); } }
    public bool hasTickComponents { get { return HasComponent(GameComponentsLookup.TickComponents); } }

    public void AddTickComponents(long newCurrentTic) {
        var index = GameComponentsLookup.TickComponents;
        var component = CreateComponent<TickComponents>(index);
        component.currentTic = newCurrentTic;
        AddComponent(index, component);
    }

    public void ReplaceTickComponents(long newCurrentTic) {
        var index = GameComponentsLookup.TickComponents;
        var component = CreateComponent<TickComponents>(index);
        component.currentTic = newCurrentTic;
        ReplaceComponent(index, component);
    }

    public void RemoveTickComponents() {
        RemoveComponent(GameComponentsLookup.TickComponents);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTickComponents;

    public static Entitas.IMatcher<GameEntity> TickComponents {
        get {
            if (_matcherTickComponents == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TickComponents);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTickComponents = matcher;
            }

            return _matcherTickComponents;
        }
    }
}
